<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context-3.1.xsd
  http://www.springframework.org/schema/aop  
  http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
  http://www.springframework.org/schema/mvc  
  http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
  
 <!--  自动包扫描，将该包注解含有controller的作为控制器，与spring-mybatis的包扫描不同 -->
  <context:component-scan base-package="top.wthfeng.controller" />
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
   <!--    将返回结果转为json格式 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">  <!--  配置json转化器 -->
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<mvc:interceptors>

     <!--判断用户访问权限-->
	<mvc:interceptor>
		<mvc:mapping path="/**"/>
	 	<bean class="top.wthfeng.interceptor.AccessUserInterceptor" />
	</mvc:interceptor>






	</mvc:interceptors>
	
	<!-- <mvc:interceptors>
		记录访问日志
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.pumpkin.carriage.interceptor.AccessLogInterceptor"></bean>
		</mvc:interceptor>
		
		判断人员是否登录
		<mvc:interceptor>
			<mvc:mapping path="/login"/>
			<bean class="com.pumpkin.carriage.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>

		只有已登录用户才可以访问
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			
			<bean class="com.pumpkin.carriage.interceptor.AccessUserInterceptor">
				<property name="excludes">
					<list>
						<value>/charge/alipay/refund/confirm</value>
						<value>/admin/focuscontent/getContent</value>
						<value>/admin/focuscontent/list</value>
						<value>/admin/focuscontent/add</value>
						<value>/admin/focuscontent/delete</value>
						<value>/admin/focuscontent/depublish</value>
						<value>/admin/focuscontent/publish</value>
						
						<value>/admin/dresser/addDresser</value>
						<value>/admin/dresser/listCosmeticsClass</value>
						<value>/admin/dresser/listCosmeticsBrand</value>
						<value>/admin/dresser/addWork</value>
						
						<value>/loginOut</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		
		判断人员访问资源的权限 
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.pumpkin.carriage.interceptor.ResourceAuthorityInterceptor">
				<property name="excludes">
					<list>
						<value>/charge/alipay/refund/confirm</value>
						<value>/admin/focuscontent/getContent</value>
						<value>/admin/focuscontent/list</value>
						<value>/admin/focuscontent/add</value>
						<value>/admin/focuscontent/delete</value>
						<value>/admin/focuscontent/depublish</value>
						<value>/admin/focuscontent/publish</value>
						
						<value>/admin/dresser/addDresser</value>
						<value>/admin/dresser/listCosmeticsClass</value>
					    <value>/admin/dresser/listCosmeticsBrand</value>
					    <value>/admin/dresser/addWork</value>
						<value>/loginOut</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors> -->

	<!-- 异常处理，返回json结果 -->
	<!-- <bean id="exceptionResolver" class="com.pumpkin.carriage.resolver.ExceptionResolver"></bean> -->
	

	<!-- 配置信息读取bean，可以注入到需要读取配置信息的对象中 -->
	<!-- <bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location"
			value="classpath:spring/config/configuration.properties" />
	</bean> -->
	
		<!-- <bean id="propertyConfigurerController"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:spring/config/configuration.properties</value>
			</list>
		</property>
	</bean> -->

</beans>